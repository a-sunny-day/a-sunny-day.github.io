{"version":3,"sources":["store/actions.js","store/reducers.js","store/index.js","routes/AuthRoute.js","utils/index.js","utils/MeetingAgent.js","components/Checkbox/Checkbox.js","views/JoinMeeting.js","views/Home.js","views/Signin.js","views/StartMeeting.js","components/PWAInstallPopup/PWAInstallPopup.js","views/App.js","serviceWorker.js","index.js"],"names":["setIsDuringMeeting","flag","type","initState","isDuringMeeting","userInfo","valid","token","userName","lastJoinName","meetingHistoryList","rootReducer","produce","state","action","store","createStore","compose","applyMiddleware","thunk","window","devToolsExtension","f","AuthRoute","children","rest","render","location","to","pathname","search","from","addHyphenToMeetingId","input","length","replace","split","splice","join","isInStandaloneMode","matchMedia","matches","navigator","standalone","MeetingAgent","props","this","instance","timerHandler","timerInterval","openedBrowsingContext","hasReceiveStartMsg","windowName","windowFeatures","usePMI","features","closed","open","startListen","focus","reduxStoreInstance","dispatch","meeting","url","meetingId","joinName","test","href","event","console","log","data","origin","addEventListener","handleMessage","Checkbox","text","checked","onChange","bind","target","setState","className","classnames","containerClass","React","Component","withRouter","connect","ownProps","onCancel","history","push","goBack","joinMeeting","getInstance","useState","setMeetingId","setJoinName","isMeetingIdValid","isJoinNameValid","trim","onClickJoinMeeting","id","group","groupEnd","onInputKeyDown","e","key","placeholder","value","toLowerCase","onKeyDown","name","disabled","onClick","goToJoinMeeting","goToSignIn","goToStartMeeting","Login","frameHeight","frameRef","createRef","onMessage","frame","current","contentDocument","documentElement","scrollHeight","removeEventListener","msg","style","height","title","ref","src","back","rel","isLogging","path","Signin","Home","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","resizeTo","ReactDOM","StrictMode","document","getElementById","URL","process","reload","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","reg","confirmed","confirm","waiting","postMessage"],"mappings":"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","file":"static/js/main.98d010dd.chunk.js","sourcesContent":["export const IS_LOGGING = 'IS_LOGGING';\r\nexport const SET_USERINFO = 'SET_USERINFO';\r\nexport const IS_DURING_MEETING= \"IS_DURING_MEETING\";\r\n\r\nexport function setUserInfo(info) {\r\n    return {\r\n        type: SET_USERINFO,\r\n        userInfo: info\r\n    }\r\n}\r\n\r\nexport function setIsDuringMeeting(flag) {\r\n    return {\r\n        type: IS_DURING_MEETING,\r\n        flag: flag,\r\n    }\r\n}\r\n\r\n/************* async action creator */\r\n","import { produce } from 'immer';\r\nimport * as actions from './actions'\r\n\r\nconst initState =  {\r\n    isDuringMeeting: false,\r\n    userInfo: {\r\n        valid: false,\r\n        token: null,\r\n        userName: \"\",\r\n    },\r\n    lastJoinName: \"\",\r\n    meetingHistoryList: []\r\n};\r\n\r\nconst rootReducer = produce( (state = initState, action) => {\r\n    switch (action.type) {\r\n        case actions.SET_USERINFO:\r\n            state.userInfo = action.userInfo;\r\n            break;\r\n        case actions.IS_DURING_MEETING:\r\n            state.isDuringMeeting = action.flag;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, compose(\r\n    applyMiddleware(thunk),\r\n    window.devToolsExtension ? window.devToolsExtension() : f => f\r\n));\r\n\r\nexport default store;","import { Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nlet userInfo = false;\r\n\r\n\r\nexport default function AuthRoute({ children, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                ({ location }) => {\r\n                    if (userInfo) {\r\n                        // ok\r\n                        return children;\r\n                    } else {\r\n                        // need to signin\r\n                        return (\r\n                            <Redirect to={{ pathname: '/signin', search: `from=${location.pathname}`, state: { from: location } }} />\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        />\r\n    )\r\n}","// input must be all numbers\r\nexport function addHyphenToMeetingId(input) {\r\n    // pattern of meeting id: /^\\d{3}\\d{3,4}\\d{3,4}$/\r\n    // user can input the by hand \r\n    // or paste from clipboard\r\n    input += \"\";\r\n    input = input.replace(/-/g, \"\").split('');\r\n    let length = input.length;\r\n    if (length <= 3) {\r\n        input = input;\r\n    } else if (length <= 6) {\r\n        input.splice(3, 0, \"-\");\r\n    } else if (length <= 10) {\r\n        input.splice(3, 0, '-');\r\n        input.splice(7, 0, '-');\r\n    } else if (length <= 11) {\r\n        input.splice(3, 0, '-');\r\n        input.splice(8, 0, '-');\r\n    }\r\n    return input.join(\"\");\r\n}\r\n\r\n// export function isEmail(value) {\r\n//     return /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i.test(value);\r\n// }\r\nexport function isEmail(value) {\r\n    return /[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,6}/.test(value);\r\n}\r\n\r\n\r\n\r\nexport function encodeURL(dataObject) {\r\n    // value is not an object \r\n    let result = [];\r\n    for (let key in dataObject) {\r\n        result.push(key + \"=\" + dataObject[key]);\r\n    }\r\n    return window.encodeURI(result.join(\"&\"));\r\n}\r\n\r\nexport function getDomain(url) {\r\n    var result;\r\n    var urlExec = /https:\\/\\/([^/]+)/ig.exec(url);\r\n    if (urlExec && urlExec.length) {\r\n        result = urlExec[0];\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nexport function isInStandaloneMode() {\r\n    return window.matchMedia(\"(display-mode: standalone)\").matches || window.navigator.standalone === true;\r\n}\r\n","import { setIsDuringMeeting } from 'store/actions.js';\r\nimport { isInStandaloneMode } from \"utils/index.js\";\r\nimport reduxStoreInstance from 'store/index.js';\r\n\r\n\r\nexport default class MeetingAgent {\r\n    constructor(props) {\r\n        this.instance = null;\r\n        this.timerHandler = null;\r\n        this.timerInterval = 5000; // 5 seconds;\r\n        // A browsing context is the environment in which a browser displays a Document\r\n        // (normally a tab nowadays, but possibly also a window or a frame within a page).\r\n        this.openedBrowsingContext = null; // start/join meeting will open another window/tab, we need to communicate to it\r\n        this.hasReceiveStartMsg = false;\r\n        this.windowName = \"WebCliet_Meeting\";\r\n        this.windowFeatures = \"top=20,left=20,titlebar=0,toolbar=0,location=0,status=0,menubar=0\";\r\n    }\r\n\r\n    static getInstance() {\r\n        if (this.instance) {\r\n            return this.instance;\r\n        } else {\r\n            return new MeetingAgent();\r\n        }\r\n    }\r\n\r\n    startMeeting(usePMI) {\r\n        const url = \"https://zoom.us/wc/**********/start\";\r\n        let features = isInStandaloneMode() ? this.windowFeatures : \"\";\r\n        if (this.openedBrowsingContext == null || this.openedBrowsingContext.closed) {\r\n            this.openedBrowsingContext = window.open(url, this.windowName, features);\r\n            this.startListen();\r\n        } else {\r\n            this.openedBrowsingContext.focus();\r\n        }\r\n\r\n        if (this.openedBrowsingContext != null) {\r\n            reduxStoreInstance.dispatch(setIsDuringMeeting(true));\r\n        }\r\n    }\r\n\r\n    _joinMeeting(meeting) {\r\n        const url = `https://zoom.us/wc/${meeting.meetingId}/join?name=${meeting.joinName}`;\r\n        let features = isInStandaloneMode() ? this.windowFeatures : \"\";\r\n        if (\r\n            this.openedBrowsingContext == null ||\r\n            this.openedBrowsingContext.closed ||\r\n            !/wc\\/\\d{8,11}\\/(join|start)/.test(this.openedBrowsingContext.location.pathname)\r\n        ) {\r\n            this.openedBrowsingContext = window.open(url, this.windowName, features);\r\n            this.startListen();\r\n        } else {\r\n            this.openedBrowsingContext.focus();\r\n        }\r\n\r\n        if (this.openedBrowsingContext != null) {\r\n            reduxStoreInstance.dispatch(setIsDuringMeeting(true));\r\n        }\r\n    }\r\n\r\n    joinMeeting(meeting) {\r\n        const url = `https://zoom.us/wc/${meeting.meetingId}/join?name=${meeting.joinName}`;\r\n        if( isInStandaloneMode() ) {\r\n            window.location.href = url;\r\n        } else {\r\n            window.open(url, \"_blank\");\r\n        }\r\n    }\r\n    meetingEnded() {\r\n        reduxStoreInstance.dispatch(setIsDuringMeeting(false));\r\n        this.openedBrowsingContext = null;\r\n    }\r\n\r\n    handleMessage(event) {\r\n        console.log(\"from opened window message: \", event.data, event.origin);\r\n    }\r\n\r\n    startListen() {\r\n        window.addEventListener('message', this.handleMessage);\r\n        // if(this.timerHandler) {\r\n        //     clearInterval(this.timerHandler);\r\n        // } else {\r\n        //     this.timerHandler = setTimeout( () => {\r\n        //         this.endListen();\r\n        //     }, this.timerInterval);\r\n        // }\r\n    }\r\n\r\n    endListen() {\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport \"./Checkbox.scss\";\r\nimport classnames from 'classnames';\r\n\r\nclass Checkbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\",\r\n            checked: true,\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n    onChange(event) {\r\n        console.log(event.target.checked);\r\n        this.setState({\r\n            checked: event.target.checked\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <label className={classnames('zm-checkbox-container', this.props.containerClass)}>\r\n                {this.props.text}\r\n                <input type=\"checkbox\" checked={this.state.checked} onChange={this.onChange}></input>\r\n                <span className=\"check-mark\"></span>\r\n            </label>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport MeetingAgent from \"utils/MeetingAgent.js\";\r\nimport ZmCheckbox from \"components/Checkbox/Checkbox\";\r\nimport { addHyphenToMeetingId } from 'utils/index';\r\n\r\nfunction JoinMeeting({ onCancel, joinMeeting }) {\r\n    const [meetingId, setMeetingId] = useState(\"\");\r\n    const [joinName, setJoinName] = useState(\"\");\r\n\r\n    let isMeetingIdValid = /^\\d{9,11}$/.test(meetingId);\r\n    let isJoinNameValid = joinName.trim().length > 0 && joinName.trim().length <= 70;\r\n\r\n    const onMeetingIdChange = (e) => {\r\n        let id = e.target.value.toLowerCase();\r\n        id = id.replace(/[-\\s]/g, \"\");\r\n        // first filter invalid input character\r\n        if (/^\\d{0,11}$/.test(id)) {\r\n            setMeetingId(id);\r\n        }\r\n    }\r\n\r\n    const onJoinNameChange = (e) => {\r\n        let name = e.target.value;\r\n        if (name.length <= 70) {\r\n            setJoinName(name);\r\n        }\r\n    }\r\n\r\n    const onClickJoinMeeting = () => {\r\n        if (isMeetingIdValid && isJoinNameValid) {\r\n            let id = meetingId.replace(/-/g, \"\");\r\n            console.group(\"join meeting\")\r\n            console.log(\"meeting id is %s\", meetingId);\r\n            console.log(\"join name is %s\", joinName);\r\n            console.groupEnd();\r\n            joinMeeting(id, joinName);\r\n        }\r\n    }\r\n\r\n    const onInputKeyDown = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            onClickJoinMeeting();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"join\">\r\n            <h2 className=\"join-header\">Join Meeting</h2>\r\n            <div className=\"join-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"join-meetingId\"\r\n                    placeholder=\"Meeting ID\"\r\n                    value={addHyphenToMeetingId(meetingId)}\r\n                    onChange={onMeetingIdChange}\r\n                    onKeyDown={onInputKeyDown}></input>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"join-joinName\"\r\n                    placeholder=\"Screen Name\"\r\n                    value={joinName}\r\n                    onChange={onJoinNameChange}\r\n                    onKeyDown={onInputKeyDown}></input>\r\n\r\n                <ZmCheckbox\r\n                    containerClass=\"join-connect-audio\"\r\n                    text=\"Remember my name for future meetings\"\r\n                    checked={false}\r\n                    onChange={checked => { console.log(checked) }} />\r\n                <ZmCheckbox\r\n                    containerClass=\"join-connect-audio\"\r\n                    text=\"Do not connect to audio\"\r\n                    checked={false}\r\n                    onChange={checked => { console.log(checked) }} />\r\n                <ZmCheckbox\r\n                    containerClass=\"join-off-video\"\r\n                    text=\"Turn off my video\"\r\n                    checked={false}\r\n                    onChange={checked => { console.log(checked) }} />\r\n\r\n            </div>\r\n            <footer>\r\n                <button\r\n                    disabled={!(isMeetingIdValid && isJoinNameValid)}\r\n                    className=\"btn-join\"\r\n                    onClick={onClickJoinMeeting}>Join</button>\r\n                <button className=\"btn-cancel\" onClick={onCancel}>Cancel</button>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nJoinMeeting.propTypes = {\r\n    onCancel: PropTypes.func.isRequired,\r\n    joinMeeting: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n    return {\r\n        onCancel: () => {\r\n            const { history } = ownProps;\r\n            if (history.length === 1) {\r\n                history.push({ pathname: \"/\" })\r\n            } else {\r\n                history.goBack();\r\n            }\r\n        },\r\n        joinMeeting: (meetingId, joinName) => {\r\n            MeetingAgent.getInstance().joinMeeting({ meetingId, joinName });\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(JoinMeeting));","/**\r\n * this is shown if user hasn't loged in.\r\n * he can just \r\n *  1. login\r\n *  2. join a meeting\r\n */\r\n\r\nimport React from 'react'\r\nimport {withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction MainLogout(props) {\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                props.userInfo.valid ?\r\n                <div className=\"header\">\r\n                    {props.userInfo.userName}\r\n                </div> \r\n                : null\r\n            }\r\n            <div className=\"home-logo\"></div>\r\n\r\n\r\n            <div className=\"btns-home\">\r\n\r\n               { \r\n                    props.userInfo.valid && (\r\n                        <button \r\n                            className=\"btn btn-block btn-home-start\"\r\n                            onClick={props.goToStartMeeting}\r\n                            >Start Meeting</button>\r\n                    )\r\n               }\r\n\r\n               <button \r\n                   className=\"btn btn-block btn-home-join\"\r\n                   onClick={props.goToJoinMeeting}\r\n                   >Join Meeting</button>\r\n\r\n               {\r\n                   !props.userInfo.valid && (\r\n                    <button \r\n                        className=\"btn btn-block btn-home-signin\"\r\n                        onClick={props.goToSignIn}\r\n                        >Sign In</button>\r\n                   )\r\n               }\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet mapState = (state)=> ({userInfo: state.userInfo})\r\nlet mapDispatch = (dispatch, ownProps) => ({\r\n    goToJoinMeeting: () => {\r\n        let {history} = ownProps;\r\n        history.push({pathname: '/join'});\r\n    },\r\n    goToSignIn: () => {\r\n        return;\r\n        let {history} = ownProps;\r\n        history.push({pathname: '/signin'});\r\n    },\r\n    goToStartMeeting: () => {\r\n        let {history} = ownProps;\r\n        history.push({pathname: '/start'});\r\n    }\r\n})\r\n\r\nexport default withRouter( connect(mapState, mapDispatch)(MainLogout) );\r\n","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n// const privacyURL = 'https://zoom.us/privacy?onlycontent=1';\r\n// const serviceURL = 'https://zoom.us/terms?onlycontent=1';\r\nconst signupURL = \"https://zoom.com/signin\";\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            frameHeight: 450\r\n        }\r\n        this.frameRef = React.createRef();\r\n        this.onMessage = this.onMessage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let frame = this.frameRef.current;\r\n        frame.addEventListener('message', this.onMessage);\r\n        frame.addEventListener(\"load\", (e) => {\r\n            this.setState({\r\n                frameHeight: e.target.contentDocument.documentElement.scrollHeight\r\n            })\r\n        })\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.frameRef.current.removeEventListener('message', this.onMessage);\r\n    }\r\n\r\n    onMessage(msg) {\r\n        console.log('signin frame message: ', msg);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signin\">\r\n                <h2 className=\"signin-header\">Sign In</h2>\r\n                <div className=\"signin-body\" style={{height: this.state.frameHeight + \"px\"}}>\r\n                    <iframe \r\n                        title=\"siginin-web\"\r\n                        ref={this.frameRef}\r\n                        name=\"siginin-web\"\r\n                        className=\"signin-iframe\"\r\n                        src=\"https://zoomdev.us/signin\"></iframe>\r\n                </div>\r\n                <footer className=\"signin-footer\">\r\n                    <span className=\"signin-back\" onClick={this.props.back}>&lt;&nbsp;Back</span>\r\n                    <a href={signupURL} className=\"signin-signup\" target=\"_blank\" rel=\"noopener noreferrer\">Sign Up Free</a>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapState = state => ({\r\n    isLogging: state.isLogging\r\n});\r\n\r\nconst mapDispatch = (dispatch, ownProps) => ({\r\n    back: () => {\r\n        const { history } = ownProps;\r\n        if(history.length === 1) {\r\n            history.push({pathname: \"/\"})\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    }\r\n})\r\nexport default withRouter(connect( mapState, mapDispatch )(Login) );","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport ZmCheckbox from 'components/Checkbox/Checkbox';\r\n\r\nfunction StartMeeting(props) {\r\n    let pmi = \"***-****-****\";\r\n    let text = \"Use My Personal Meeting ID (PMI) \" + pmi;\r\n\r\n    return (\r\n        <div className=\"start\">\r\n            <div className=\"start-header\">\r\n                Start Meeting\r\n            </div>\r\n\r\n            <div className=\"btns btns-start\">\r\n                <button className=\"btn btn-block btn-start-with-video\">Start With Video</button>\r\n                <button className=\"btn btn-block btn-start-without-video\"onClick={null}>Start Without Video</button>\r\n                <div className=\"start-checkbox\">\r\n                    <ZmCheckbox\r\n                        text={text}\r\n                        checked={true} \r\n                        containerClass=\"start-use-pmi\"\r\n                        onChange={(e) => {console.log(e.target)}} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"start-footer\">\r\n                <span href=\"#\" className=\"start-cancel\" onClick={props.goBack}>Cancel</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatch = (dispatch, ownProps) => ({\r\n    goBack() {\r\n        let {history} = ownProps;\r\n        if(history.length === 1) {\r\n            history.push({pathname: \"/\"});\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    }\r\n})\r\nexport default withRouter( connect(null, mapDispatch)(StartMeeting) );","import React from 'react';\r\nimport \"./install-popup.scss\"\r\n\r\nclass PWAInstallPopup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n        };\r\n        this.browserInstallEvent = null;\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onClose = this.onClose.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"beforeinstallprompt\", (e) => {\r\n            console.log(\"pwa event: beforeinstallprompt\");\r\n            this.browserInstallEvent = e;\r\n            this.setState({\r\n                show: true,\r\n            });\r\n        });\r\n    }\r\n    onClick() {\r\n       \r\n        this.browserInstallEvent.prompt();\r\n        this.browserInstallEvent.userChoice.then(\r\n            choice => {\r\n                // either \"accepted\" or \"dismissed\"\r\n                // {outcome: \"dismissed\", platform: \"\"} in chrome\r\n                console.log('pwa prompt: user choice -- ', choice);\r\n                if(choice.outcome === \"accepted\") {\r\n                    this.setState({\r\n                        show: false\r\n                    });\r\n                }\r\n            }\r\n        )\r\n    }\r\n    onClose(e) {\r\n        e.stopPropagation();\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n    render() {\r\n        return this.state.show ? (\r\n            <div className=\"install-popup\" onClick={this.onClick}>\r\n                <span>You can add me to desktop now.</span>\r\n                <span className=\"close\" onClick={this.onClose}>X</span>\r\n            </div>\r\n        ) : null\r\n    }\r\n}\r\n\r\nexport default PWAInstallPopup;","import React from 'react';\r\nimport 'styles/app.scss';\r\nimport {connect} from 'react-redux';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport AuthRoute from \"routes/AuthRoute.js\"\r\nimport JoinMeeting from \"./JoinMeeting\";\r\nimport Home from './Home';\r\nimport Signin from './Signin'\r\nimport StartMeeting from './StartMeeting'\r\n// import LoginIframe from './LoginIframe';\r\nimport PWAInstallPopup from \"components/PWAInstallPopup/PWAInstallPopup.js\"\r\nimport { isInStandaloneMode } from \"utils/index.js\"\r\n\r\n\r\nfunction App(props) {\r\n    return (\r\n        <>\r\n            <div className=\"app\">\r\n                <Switch>\r\n                    <Route path=\"/signin\" >\r\n                        <Signin />\r\n                    </Route>\r\n\r\n                    <Route path=\"/join\">\r\n                        <JoinMeeting />\r\n                    </Route>\r\n\r\n                    <AuthRoute path=\"/start\">\r\n                        <StartMeeting />\r\n                    </AuthRoute>\r\n\r\n                    <Route path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n/** Even for the App component, if you do not connect it to redux,  it will not receive data from redux store */\r\nexport default connect(\r\n    state => state,\r\n)(App);\r\n\r\n","// read https://bit.ly/CRA-PWA\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.navigator.serviceWorker.addEventListener('message', e => {\r\n        if(e.data && e.data.type === 'SW.UPDATE') {\r\n            console.log('service worker has updated and user confirmed to reload the page; to reload.');\r\n            window.location.reload();\r\n        }\r\n    });\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' + 'worker.'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        // If updatefound is fired, it means that there's a new service worker being installed.\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              \r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './store/index.js';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router } from \"react-router-dom\"\r\nimport 'styles/index.scss';\r\nimport App from './views/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// if app is installed on desktop\r\n// how to determine whether it is the first time ???\r\nif (window.matchMedia(\"(display-mode: standalone)\").matches || window.navigator.standalone === true) {\r\n    window.resizeTo(600, 370);\r\n}\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store}>\r\n            <React.StrictMode>\r\n                <App />\r\n            </React.StrictMode>\r\n        </Provider>\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    serviceWorker.unregister();\r\n} else {\r\n    serviceWorker.register( {\r\n        onUpdate: (reg) => {\r\n            // show a confirm popup to ask user if he/she would like to reload the page to see new contents\r\n            let confirmed = window.confirm('New content is avaliable, would you like to reload the page to use the new contents?')\r\n            console.log(\"user action: \", confirmed);\r\n            if(confirmed) {\r\n                console.log('user confirmed to reload');\r\n                reg.waiting && reg.waiting.postMessage({type: \"SW.SKIP_WAITING\"});\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n// service worker's message is received via ServiceWorkerContainer's message event, not the Window's message event;\r\n// window.addEventListener('message', e => {\r\n// });\r\n\r\n// window.navigator.serviceWorker.addEventListener('controllerchange', (e) => {\r\n//     // when the page is first loaded, controller changes from null to some service worker, this event will also fire\r\n//     window.location.reload();\r\n// });\r\n"],"sourceRoot":""}